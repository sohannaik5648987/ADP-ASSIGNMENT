print('Enter number of edges in the graph:-')
n = int(input())
print('Enter number of vertices in the graph')
m = int(input())
graph = []
print('Enter weighted edges of the graph')
for i in range(m):
u, v, w = list(map(int, input().split()))
graph.append([u, v, w])
def BellmanFord(src):
dist = [float(&quot;inf&quot;) for i in range(n)]
dist[src] = 0
for i in range(n-1):
for u, v, w in graph:
if dist[u] != float(&quot;inf&quot;) and dist[u]+w &lt; dist[v]:
dist[v] = dist[u]+w
cycle = 0
for u, v, w in graph:
if dist[u] != float(&quot;Inf&quot;) and dist[u] + w &lt; dist[v]:
print(&quot;Graph contains negative weight cycle&quot;)
cycle = 1
break

if cycle == 0:
print(Distance from source vertex,src)
print(Vertex \t Distance from source;)
for i in range(len(dist)):
print(i,\t,dist[i])

src=int(input(&quot;Enter the source vertex:&quot;))
BellmanFord(src)
